AWS: Launch EC2, install Docker setup webserver and access through browser 
===============================================

Summary
============
Create AWS Key pair
Launch EC2 with public ip
	Attached SG should allow SSH on port 22
C:\dev\Code\AWS\key-pair>ssh -i my-key-pair-for-ssh-01.pem ec2-user@<ip>
						Note: ec2-user is a default user created for all ec2 m/c
[ec2-user@ip-172-31-90-207 ~]$ sudo su
[root@ip-172-31-90-207 ec2-user]# yum update -y
[root@ip-172-31-90-207 ec2-user]# curl -fsSL https://get.docker.com -o get-docker.sh
[root@ip-172-31-90-207 ec2-user]# yum install docker -y
[root@ip-172-31-90-207 ec2-user]# mkdir my-web-app-01
[root@ip-172-31-90-207 ec2-user]# cd my-web-app-01
>vim Dockerfile
	FROM rockylinux:8			
	RUN dnf install -y httpd	
	COPY . /var/www/html/
	CMD ["/usr/sbin/httpd", "-D", "FOREGROUND"]
	EXPOSE 80
	
Even simpler:
	FROM httpd:latest 		#The official httpd:latest Docker image runs on Debian by default.(Feb 9 2025)
	COPY . /usr/local/apache2/htdocs
	EXPOSE 80
Or:
	FROM httpd:alpine
	COPY . /usr/local/apache2/htdocs
	EXPOSE 80
	
>docker build -t my-image-01 . 
[root@ip-172-31-90-207 my-web-app-01]# docker images
[root@ip-172-31-90-207 ec2-user]# docker run -d -p 80:80 --name my-container-01 my-image-01
[root@ip-172-31-90-207 ec2-user]# docker ps
Access from web browser: http://18.234.221.189/

Other useful command:
>docker history my-image-01
>docker run -it --rm my-image-01 /bin/bash (This drops you into a shell inside the container.)
[instead of /bin/bash you can do /bin/sh. I guess this will support vim editor inside container]
>docker exec -it my-container-01 /bin/bash(This starts an interactive session inside the container)
>root@fdbb2e4cfa01:/usr/local/apache2# ls
bin  build  cgi-bin  conf  error  htdocs  icons  include  logs  modules

-------------------------------------------------------------------------------------

	

Detail
=========
Create AWS Key pair
	In AWS console, go to EC2>>Network & Security>>Key Pairs
	Create a key pair for SSH. It generates and downloads .pem file
		(RSA private key in 'Downloads' folder)
	Move the file to C:\dev\Code\AWS\key-pair
	
Create security group. 
	Allow inbound SSH traffic (port 22) in the Security Group.

Launch your EC2 and start. 
	Storage type gp3 - cheapest
	Attach security group created earlier. Or create right now.
	Autoassign public ip.
	(Private ip is more Secure Approach. If your EC2 only has a private IP, 
	 you cannot connect directly from the internet. Instead, you need a 
	 bastion/jump server in a public subnet to SSH into first)

C:\dev\Code\AWS\key-pair>ssh -i my-key-pair-for-ssh-01.pem ec2-user@<ip> 
	(.ppk is for putty, .pem for SSH)
	(The -i option in the ssh command specifies the identity file (private key))
	(SSH key-based authentication is stronger than a password and prevents brute-force attacks.)
	
Faced permission issue:	
	C:\dev\Code\AWS\key-pair>ssh -i my-key-pair-for-ssh-01.pem ec2-user@18.234.221.189
The authenticity of host '18.234.221.189 (18.234.221.189)' can't be established.
ED25519 key fingerprint is SHA256:ZF3f9ewjyoBODJIl8Sq5SoJ9JB7IUcB0JH7EcUijyJs.
This key is not known by any other names.
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
-----------
Warning: Permanently added '18.234.221.189' (ED25519) to the list of known hosts.
Bad permissions. Try removing permissions for user: BUILTIN\\Users (S-1-5-32-545) on file C:/dev/Code/AWS/key-pair/my-key-pair-for-ssh-01.pem.
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Permissions for 'my-key-pair-for-ssh-01.pem' are too open.
It is required that your private key files are NOT accessible by others.
This private key will be ignored.
Load key "my-key-pair-for-ssh-01.pem": bad permissions
ec2-user@18.234.221.189: Permission denied (publickey,gssapi-keyex,gssapi-with-mic).
================
Fix:
C:\dev\Code\AWS\key-pair>icacls my-key-pair-for-ssh-01.pem /inheritance:r
processed file: my-key-pair-for-ssh-01.pem
Successfully processed 1 files; Failed processing 0 files
---
C:\dev\Code\AWS\key-pair>icacls my-key-pair-for-ssh-01.pem /grant:r %USERNAME%:R
processed file: my-key-pair-for-ssh-01.pem
Successfully processed 1 files; Failed processing 0 files
---
Verify
C:\dev\Code\AWS\key-pair>icacls my-key-pair-for-ssh-01.pem
my-key-pair-for-ssh-01.pem SHISHIR\shish:(R)
---
C:\dev\Code\AWS\key-pair>ssh -i my-key-pair-for-ssh-01.pem ec2-user@18.234.221.189
   ,     #_
   ~\_  ####_        Amazon Linux 2023
  ~~  \_#####\
  ~~     \###|
  ~~       \#/ ___   https://aws.amazon.com/linux/amazon-linux-2023
   ~~       V~' '->
    ~~~         /
      ~~._.   _/
         _/ _/
       _/m/'
[ec2-user@ip-172-31-90-207 ~]$
[ec2-user@ip-172-31-90-207 ~]$ sudo su
[root@ip-172-31-90-207 ec2-user]# yum update -y
Amazon Linux 2023 Kernel Livepatch repository                                                                                               123 kB/s |  14 kB     00:00
Dependencies resolved.
Nothing to do.
Complete!
[root@ip-172-31-90-207 ec2-user]#

[root@ip-172-31-90-207 ec2-user]# curl -fsSL https://get.docker.com -o get-docker.sh
[root@ip-172-31-90-207 ec2-user]# ls
get-docker.sh
[root@ip-172-31-90-207 ec2-user]# yum install docker -y
Last metadata expiration check: 0:03:25 ago on Wed Feb  5 21:10:46 2025.
Dependencies resolved.
============================================================================================================================================================================
 Package                                         Architecture                    Version                                         Repository                            Size
============================================================================================================================================================================
Installing:
 docker                                          x86_64                          25.0.6-1.amzn2023.0.2                           amazonlinux                           44 M
Installing dependencies:
 containerd                                      x86_64                          1.7.25-1.amzn2023.0.1                           amazonlinux                           36 M
 iptables-libs                                   x86_64                          1.8.8-3.amzn2023.0.2                            amazonlinux                          401 k
 iptables-nft                                    x86_64                          1.8.8-3.amzn2023.0.2                            amazonlinux                          183 k
 libcgroup                                       x86_64                          3.0-1.amzn2023.0.1                              amazonlinux                           75 k
 libnetfilter_conntrack                          x86_64                          1.0.8-2.amzn2023.0.2                            amazonlinux                           58 k
 libnfnetlink                                    x86_64                          1.0.1-19.amzn2023.0.2                           amazonlinux                           30 k
 libnftnl                                        x86_64                          1.2.2-2.amzn2023.0.2                            amazonlinux                           84 k
 pigz                                            x86_64                          2.5-1.amzn2023.0.3                              amazonlinux                           83 k
 runc                                            x86_64                          1.2.4-1.amzn2023.0.1                            amazonlinux                          3.4 M

Transaction Summary
============================================================================================================================================================================
Install  10 Packages

Total download size: 84 M
Installed size: 319 M
Downloading Packages:
(1/10): iptables-libs-1.8.8-3.amzn2023.0.2.x86_64.rpm                                                                                       4.6 MB/s | 401 kB     00:00
(2/10): iptables-nft-1.8.8-3.amzn2023.0.2.x86_64.rpm                                                                                        2.7 MB/s | 183 kB     00:00
(3/10): libcgroup-3.0-1.amzn2023.0.1.x86_64.rpm                                                                                             1.6 MB/s |  75 kB     00:00
(4/10): libnetfilter_conntrack-1.0.8-2.amzn2023.0.2.x86_64.rpm                                                                              936 kB/s |  58 kB     00:00
(5/10): libnfnetlink-1.0.1-19.amzn2023.0.2.x86_64.rpm                                                                                       944 kB/s |  30 kB     00:00
(6/10): libnftnl-1.2.2-2.amzn2023.0.2.x86_64.rpm                                                                                            1.2 MB/s |  84 kB     00:00
(7/10): pigz-2.5-1.amzn2023.0.3.x86_64.rpm                                                                                                  1.4 MB/s |  83 kB     00:00
(8/10): runc-1.2.4-1.amzn2023.0.1.x86_64.rpm                                                                                                5.8 MB/s | 3.4 MB     00:00
(9/10): containerd-1.7.25-1.amzn2023.0.1.x86_64.rpm                                                                                          23 MB/s |  36 MB     00:01
(10/10): docker-25.0.6-1.amzn2023.0.2.x86_64.rpm                                                                                             23 MB/s |  44 MB     00:01
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Total                                                                                                                                        43 MB/s |  84 MB     00:01
Running transaction check
Transaction check succeeded.
Running transaction test
Transaction test succeeded.
Running transaction
  Preparing        :                                                                                                                                                    1/1
  Installing       : runc-1.2.4-1.amzn2023.0.1.x86_64                                                                                                                  1/10
  Installing       : containerd-1.7.25-1.amzn2023.0.1.x86_64                                                                                                           2/10
  Running scriptlet: containerd-1.7.25-1.amzn2023.0.1.x86_64                                                                                                           2/10
  Installing       : pigz-2.5-1.amzn2023.0.3.x86_64                                                                                                                    3/10
  Installing       : libnftnl-1.2.2-2.amzn2023.0.2.x86_64                                                                                                              4/10
  Installing       : libnfnetlink-1.0.1-19.amzn2023.0.2.x86_64                                                                                                         5/10
  Installing       : libnetfilter_conntrack-1.0.8-2.amzn2023.0.2.x86_64                                                                                                6/10
  Installing       : iptables-libs-1.8.8-3.amzn2023.0.2.x86_64                                                                                                         7/10
  Installing       : iptables-nft-1.8.8-3.amzn2023.0.2.x86_64                                                                                                          8/10
  Running scriptlet: iptables-nft-1.8.8-3.amzn2023.0.2.x86_64                                                                                                          8/10
  Installing       : libcgroup-3.0-1.amzn2023.0.1.x86_64                                                                                                               9/10
  Running scriptlet: docker-25.0.6-1.amzn2023.0.2.x86_64                                                                                                              10/10
  Installing       : docker-25.0.6-1.amzn2023.0.2.x86_64                                                                                                              10/10
  Running scriptlet: docker-25.0.6-1.amzn2023.0.2.x86_64                                                                                                              10/10
Created symlink /etc/systemd/system/sockets.target.wants/docker.socket → /usr/lib/systemd/system/docker.socket.

  Verifying        : containerd-1.7.25-1.amzn2023.0.1.x86_64                                                                                                           1/10
  Verifying        : docker-25.0.6-1.amzn2023.0.2.x86_64                                                                                                               2/10
  Verifying        : iptables-libs-1.8.8-3.amzn2023.0.2.x86_64                                                                                                         3/10
  Verifying        : iptables-nft-1.8.8-3.amzn2023.0.2.x86_64                                                                                                          4/10
  Verifying        : libcgroup-3.0-1.amzn2023.0.1.x86_64                                                                                                               5/10
  Verifying        : libnetfilter_conntrack-1.0.8-2.amzn2023.0.2.x86_64                                                                                                6/10
  Verifying        : libnfnetlink-1.0.1-19.amzn2023.0.2.x86_64                                                                                                         7/10
  Verifying        : libnftnl-1.2.2-2.amzn2023.0.2.x86_64                                                                                                              8/10
  Verifying        : pigz-2.5-1.amzn2023.0.3.x86_64                                                                                                                    9/10
  Verifying        : runc-1.2.4-1.amzn2023.0.1.x86_64                                                                                                                 10/10

Installed:
  containerd-1.7.25-1.amzn2023.0.1.x86_64                docker-25.0.6-1.amzn2023.0.2.x86_64               iptables-libs-1.8.8-3.amzn2023.0.2.x86_64
  iptables-nft-1.8.8-3.amzn2023.0.2.x86_64               libcgroup-3.0-1.amzn2023.0.1.x86_64               libnetfilter_conntrack-1.0.8-2.amzn2023.0.2.x86_64
  libnfnetlink-1.0.1-19.amzn2023.0.2.x86_64              libnftnl-1.2.2-2.amzn2023.0.2.x86_64              pigz-2.5-1.amzn2023.0.3.x86_64
  runc-1.2.4-1.amzn2023.0.1.x86_64

Complete!
========================

[root@ip-172-31-90-207 ec2-user]# docker --version
Docker version 25.0.5, build 5dc9bcc
[root@ip-172-31-90-207 ec2-user]# systemctl start docker
[root@ip-172-31-90-207 ec2-user]# systemctl status docker
● docker.service - Docker Application Container Engine
     Loaded: loaded (/usr/lib/systemd/system/docker.service; disabled; preset: disabled)
     Active: active (running) since Wed 2025-02-05 21:17:05 UTC; 15s ago
TriggeredBy: ● docker.socket
       Docs: https://docs.docker.com
    Process: 27412 ExecStartPre=/bin/mkdir -p /run/docker (code=exited, status=0/SUCCESS)
    Process: 27413 ExecStartPre=/usr/libexec/docker/docker-setup-runtimes.sh (code=exited, status=0/SUCCESS)
   Main PID: 27414 (dockerd)
      Tasks: 7
     Memory: 29.6M
        CPU: 264ms
     CGroup: /system.slice/docker.service
             └─27414 /usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock --default-ulimit nofile=32768:65536

Feb 05 21:17:04 ip-172-31-90-207.ec2.internal systemd[1]: Starting docker.service - Docker Application Container Engine...
Feb 05 21:17:04 ip-172-31-90-207.ec2.internal dockerd[27414]: time="2025-02-05T21:17:04.668030612Z" level=info msg="Starting up"
Feb 05 21:17:04 ip-172-31-90-207.ec2.internal dockerd[27414]: time="2025-02-05T21:17:04.728080582Z" level=info msg="Loading containers: start."
Feb 05 21:17:05 ip-172-31-90-207.ec2.internal dockerd[27414]: time="2025-02-05T21:17:05.144607145Z" level=info msg="Loading containers: done."
Feb 05 21:17:05 ip-172-31-90-207.ec2.internal dockerd[27414]: time="2025-02-05T21:17:05.165867566Z" level=info msg="Docker daemon" commit=b08a51f containerd-snapshotter=fa>
Feb 05 21:17:05 ip-172-31-90-207.ec2.internal dockerd[27414]: time="2025-02-05T21:17:05.166111179Z" level=info msg="Daemon has completed initialization"
Feb 05 21:17:05 ip-172-31-90-207.ec2.internal dockerd[27414]: time="2025-02-05T21:17:05.209243155Z" level=info msg="API listen on /run/docker.sock"
Feb 05 21:17:05 ip-172-31-90-207.ec2.internal systemd[1]: Started docker.service - Docker Application Container Engine.
================


[root@ip-172-31-90-207 ec2-user]# ls
get-docker.sh
[root@ip-172-31-90-207 ec2-user]# mkdir my-web-app-01
[root@ip-172-31-90-207 ec2-user]# cd my-web-app-01/
[root@ip-172-31-90-207 my-web-app-01]#
>mkdir my-project-name
>cd my-web-app-01
>vim Dockerfile

	# Use the official CentOS 7 base image
FROM centos:7

# Install the Apache HTTP server package
RUN yum install httpd -y 

# Copy the index.html file to the Apache document root
COPY index.html /var/www/html/

# Start Apache in the foreground when the container starts
CMD ["/usr/sbin/httpd", "-D", "FOREGROUND"]

# Expose port 80 to allow incoming HTTP traffic
EXPOSE 80

---
>vim index.html
	<!DOCTYPE html>
		<html>
		  <body>		
			<h1>WEB APPLICATION DEPLOYMENT TO ECS </h1>
		  </body>
		</html>
>ls [confirm that two files exists- Dockerfile and index.html
>docker build -t project-image . ("project-image" indicates project name. 
								  "." indicates current folder
								  -t stands for tag.
								  project-image is the name (tag) assigned to the built image.)



 => ERROR [2/3] RUN yum install httpd -y                                                                                                                               0.7s
------
 > [2/3] RUN yum install httpd -y:
0.574 Loaded plugins: fastestmirror, ovl
0.639 Determining fastest mirrors
0.645 Could not retrieve mirrorlist http://mirrorlist.centos.org/?release=7&arch=x86_64&repo=os&infra=container error was
0.645 14: curl#6 - "Could not resolve host: mirrorlist.centos.org; Unknown error"
0.647
0.647
0.647  One of the configured repositories failed (Unknown),
0.647  and yum doesn't have enough cached data to continue. At this point the only
0.647  safe thing yum can do is fail.

---
------
Dockerfile:5
--------------------
   3 |
   4 |     # Install the Apache HTTP server package
   5 | >>> RUN yum install httpd -y
   6 |
   7 |     # Copy the index.html file to the Apache document root
--------------------
ERROR: failed to solve: process "/bin/sh -c yum install httpd -y" did not complete successfully: exit code: 1
ChatGPT says - likely due to CentOS 7 reaching EOL (End of Life). So change Dockerfile -
>vim Dockerfile
FROM rockylinux:8			#replacement for CentOS

RUN dnf install -y httpd	#dnf(Dandified) is the next-generation package manager that replaces yum

COPY index.html /var/www/html/

CMD ["/usr/sbin/httpd", "-D", "FOREGROUND"]

EXPOSE 80

-------------------
[root@ip-172-31-90-207 my-web-app-01]# docker build -t my-web-app-01 .
[+] Building 19.4s (8/8) FINISHED                                                              docker:default
 => [internal] load build definition from Dockerfile                                                     0.0s
 => => transferring dockerfile: 231B                                                                     0.0s
 => [internal] load metadata for docker.io/library/rockylinux:8                                          0.5s
 => [internal] load .dockerignore                                                                        0.0s
 => => transferring context: 2B                                                                          0.0s
 => [1/3] FROM docker.io/library/rockylinux:8@sha256:9794037624aaa6212aeada1d28861ef5e0a935adaf93e4ef79  5.1s
 => => resolve docker.io/library/rockylinux:8@sha256:9794037624aaa6212aeada1d28861ef5e0a935adaf93e4ef79  0.0s
 => => sha256:9794037624aaa6212aeada1d28861ef5e0a935adaf93e4ef79837119f2a2d04c 2.41kB / 2.41kB           0.0s
 => => sha256:2d05a9266523bbf24f33ebc3a9832e4d5fd74b973c220f2204ca802286aa275d 1.04kB / 1.04kB           0.0s
 => => sha256:c79048e50f5fce116723442952adf4f5258455a1665bbc64aa65469abe9ead90 578B / 578B               0.0s
 => => sha256:9088cdb84e397c480d4c5f1675d1aa6928c3e8b5b30c57b68a756d5d1fda4d80 72.82MB / 72.82MB         0.9s
 => => extracting sha256:9088cdb84e397c480d4c5f1675d1aa6928c3e8b5b30c57b68a756d5d1fda4d80                4.0s
 => [internal] load build context                                                                        0.0s
 => => transferring context: 90B                                                                         0.0s
 => [2/3] RUN dnf install -y httpd                                                                      13.1s
 => [3/3] COPY index.html /var/www/html/                                                                 0.1s
 => exporting to image                                                                                   0.6s
 => => exporting layers                                                                                  0.6s
 => => writing image sha256:b9b41d481b6289adc1c992508a4f424ea70e38f1cb230823e589c10764af0aac             0.0s
 => => naming to docker.io/library/my-web-app-01                                                         0.0s
[root@ip-172-31-90-207 my-web-app-01]# docker images
REPOSITORY      TAG       IMAGE ID       CREATED          SIZE
my-web-app-01   latest    b9b41d481b62   12 seconds ago   276MB
-----
[root@ip-172-31-90-207 ec2-user]# docker run -d -p 80:80 --name my-container-01 my-web-app-01
5079b7f710f6f343f36bed9670b1b2b5ba827fd429cdc1d947d5d0b65af94b6a

[root@ip-172-31-90-207 ec2-user]# docker ps
CONTAINER ID   IMAGE           COMMAND                  CREATED          STATUS          PORTS                               NAMES
5079b7f710f6   my-web-app-01   "/usr/sbin/httpd -D …"   41 seconds ago   Up 40 seconds   0.0.0.0:80->80/tcp, :::80->80/tcp   my-container-01
----
Access from web browser: http://18.234.221.189/


===========================
Cleanup
Remove the Volume
Elastic IP. I didnt find it. Seems like it wasnt elastic ip. But permanent ip given to EC2.


