Account
----------
Once AWS account is created, the account id has root access. (Root user) By default mutilple regions are assigned 
to the account. All active by default. 
	Its Better to deactivate the regions that you wont be using. 
	Its better to create a user with limited access and use this new user most of the time. (IAM user)
	Enabling a region is free, but your users might create or use resources that result in AWS fees.
Maximum number of IAM users allowed per AWS account: 1000

Organizational units
---------------------
OUs are at global level.
Organizational units (OUs) enable you to group several accounts together and administer them as a single 
unit instead of one at a time.
From OU you can invite other accounts to join this OU.
At an OU level, several services are disable by default. To enable it, you can go to:
>>AWS Organizations>>Services 


Users
---------
e.g user created arn:aws:iam::062286665809:user/shishir1/@petAL123
Q. What is the default user? What roles are associated with it?
A. The default user is account owner. He/She can create more users and send invitations to those users. 
   Account owner signs in using email/password. Other users(IAM users) need to provide account number 
   of account owner, username provided by account owner and password.
   User has policies independent of Group. User with Programatic access will have keys. User with just console wont.

   In AWS console, Root User Doesn't Appear in IAM Users, because Root User is Not Managed by IAM.
   Unlike IAM users, the root user has all permissions by default and cannot be restricted.

   User may or may not belong to a group.
   User can belong to multiple groups.

User type - 
	Identity center user(access to console only). Identity center is at a region level.
	IAM user(get the keys for programmatic access). IAM is at a global level.

Attributes for identity center user
	User name
	email - for password generation instruction
	So many other optional attributes
	You can create password policies and apply to user password.
    
    

Roles
---------
When we create various resources like EC2 instances, ECS clusters with tasks, new roles are created. All roles are
associated with predefined policies. Are these roles getting associated with my default root users too?

Users are created for people. But roles are created for applications. e.g Role can be assigned to an EC2 instance which need access to S3 bucket. This way it is easier and right approach. Otherwise I may have to store access key for S3 in EC2 instance. Not a good practice.

When a user assumes a role in AWS IAM, what is the maximum session duration they can request? 12 hours

Groups
--------
Group have policies. 
User may belong to Group.
Groups created by different aws users. All users can see each others groups.
Group only contains user. They can't contain other group.

Billing is at global level. There is no region wise billing.

Policies
-----------
Policies are set of permissions. 
Certain policies are created by AWS which we cant edit. Other policies can be created by us with full control.
There are good number of pre-existing policies. I created a new one and given it a random name. Below is JSON -
	{
	    "Version": "2012-10-17",
	    "Id":"" 
	    "Statement": [
		{
		    "Sid": "VisualEditor0", --Sid (Statement ID) is an optional field, helps organize and reference 
						specific statements
		    "Effect": "Allow",
		    "Action": "apigateway:GET",
		    "Resource": "*"   -- This can be more restrictive.
				      -- e.g, in case of S3, Resource can be a certain bucket.
		}
	    ]
	}

More examples:
Example: Deny Deletion of an S3 Bucket
{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Deny",
            "Action": "s3:DeleteBucket",
            "Resource": "arn:aws:s3:::my-critical-bucket"
        }
    ]
}
----
Example: Deny Console Login from Any IP Except a Trusted One
{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Deny",
            "Action": "aws:login",
            "Resource": "*",
            "Condition": {
                "NotIpAddress": {
                    "aws:SourceIp": "203.0.113.25/32"
                }
            }
        }
    ]
}

----
Example: Block Usage of AWS in ap-southeast-1 (Singapore)
{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Deny",
            "Action": "*",
            "Resource": "*",
            "Condition": {
                "StringEquals": {
                    "aws:RequestedRegion": "ap-southeast-1"
                }
            }
        }
    ]
}




Policies can be attached to group, role or directly to the user.
IAM Session Policies: They allow for setting temporary, additional restrictions on session permissions.

--------------
Permission boundaries
A permission boundary is an advanced IAM feature that acts as an upper limit, or boundary, for the permissions of a user or role.
Example: Even if a user has an IAM policy allowing full access to S3, a permission boundary restricting them to "read-only" for S3 will limit them to that boundary.

Q. Which IAM entity is not allowed to have a permission boundary attached?

A. IAM User
B. IAM Group
C. IAM Role
D. All of the above can have permission boundaries attached.
Answer: B. IAM Group
--------------
Identity Provider configuration.
Can configure two type
	SAML
	OpenId
--------------
Guidelines:
#. Using access keys attached to an IAM user instead of the root user improves security.
#. Add MFA for root user - Enable multi-factor authentication (MFA) for the root user to improve security for this account.
	(Infact now it is mandatory)
# For EC2 - Port 22 (SSH) is currently open to all IPv4 addresses, indicated by 0.0.0.0/0 in the inbound rule in your security group. For increased security, consider restricting access to only the EC2 Instance Connect service IP addresses for your Region: 13.52.6.112/29

Questions.
1. How to change policies associated with group. Didn't find this option.
A. In the list of group, click on the group name
2. Can an account owner terminate an EC2 instance which is created by one of the user? 
A. Yes.

Service Control Policy : 

Console
IAM>>Access Analyzer>>Analyzer settings
Here I had created 2 analysers that were costing me $0.20 per month.
