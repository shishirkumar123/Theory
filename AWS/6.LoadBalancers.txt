Load balancing.
Advantage -
  Spread load across multiple downstream
  Expose a single point of access(DNS) to your application
  Seemlessly handle the failure of downstream instances
  Regular health checks.
  High availability across zones.

Types:
Gateway:  firewalls, deep packet inspection(for security, optimization, compliance), or network monitoring
NLB: Uses ALP as a TG.
ALB
Classic

Architectures:
1. Public ALB received all request. Public ALB sends request to private ALB. Private ALB distributes request to EC2. 
  What is the advantage of having public/private ALB?
-------------
2. Public NLB receives all request. 
If your ALB is private (inside a VPC and not internet-facing), an NLB can  expose it externally.
By using the Target Group (target type ALB), the NLB can forward external requests to the private ALB, 
which then routes them to the correct backend services.
This is useful in multi-tier architectures, where an NLB balances between multiple ALBs,
which then route traffic to specific backend services.

  NLB----TG1-- ALB1--TG2-Lambda
   |
   |
   |-----TG2--ALB2--TG3--EC2 Instances running web app

Role of TG1- communication between TCP based NLB and application layer ALB
Why Use NLB in Front of ALB?
This setup is useful in several cases:

Exposing a Private ALB to the Internet ‚Üí NLB can be public, while ALB remains private.
Handling Massive Traffic ‚Üí NLB can efficiently distribute TCP traffic to multiple ALBs, which then apply advanced routing.
Avoiding ALB Public IPs ‚Üí If you want ALB to handle HTTP but don‚Äôt want it exposed directly, NLB can act as a bridge.

More Scenarios..

# Internet ‚Üí Route 53 (Optional) ‚Üí ALB ‚Üí Web/App Servers (DMZ)
# Internet ‚Üí Route 53 ‚Üí NLB (TCP/UDP) ‚Üí ALB (HTTP/HTTPS) ‚Üí Web/App Servers  -NLB for serving TCP/UDP request
# Internet ‚Üí Route 53 ‚Üí NLB (Preserve Client IP) ‚Üí ALB ‚Üí Web/App Servers    -NLB for Preserve Client IP
# Internet ‚Üí Route 53 ‚Üí NLB (Multi-AZ) ‚Üí ALB-1 (AZ1)                        -NLB for supporting failover via multi AZ.
                                       ‚Üí ALB-2 (AZ2)  
# Internet ‚Üí NLB ‚Üí VPN or Secure Proxy (DMZ)
# Internet ‚Üí GWLB ‚Üí Firewall/Intrusion Detection ‚Üí Private Resources
# Web/App Server ‚Üí NLB (TCP) ‚Üí RDS (Database)  
# Remote User ‚Üí NLB (TCP 22/1194) ‚Üí Bastion Host/VPN Server  

Guidelines:
When clients are mainly web-based (React/Angular) or REST APIs, ALB is perfect.
However, if your app includes WebSockets, databases, VPN/SSH access, or custom TCP protocols, then NLB might be needed.

-----------------


NLB vs ALB
---------
Feature	                              NLB (Layer 4)	                             ALB (Layer 7)
------------------------------------------------------------------------------------------------------------------------
Speed	                               ‚ö°Very fast (low latency)	                üê¢ Slower (higher latency)
Protocol Support	                    TCP, UDP, TLS	                            HTTP, HTTPS, WebSocket
Traffic Processing	                  Direct packet forwarding	                Inspects headers, applies rules
Best For	                            High-performance, low-latency apps       	Web applications with routing needs
                                      (e.g., gaming, VoIP, MQTT)
SSL Termination	                      ‚ùå No (must be done at backend)	          ‚úÖ Yes
Sticky Sessions	                      ‚úÖ Yes (by default)	                      ‚ö†Ô∏è Yes (via cookies)

So, if raw speed and high-performance networking are needed, go with NLB. But if you need intelligent HTTP routing, ALB is the right choice.



Assignment
1. Running ReactJS on multi EC2. Put a load balancer in front.
2. Restrict HTTP request to EC2 only from load balancer.
3. Allow load balancer to accept HTTP request from anywhere.
