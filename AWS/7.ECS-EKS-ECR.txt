ECS - Elastic container Service - something like K8s
ECS has
    - Control Plane - For scheduling and orchestration
    - Managing Services - Managing the lifecycle of a container
            - EC2 instances having docker(or any container) runtime 
            -ECS Agent for communication with control plane

Q. Can ECS cluster go beyond a region/vpc?
A. No. It can span through multiple subnets	

Cluster, Services, Tasks
==============================
	Cluster - The group of m/c on which the service/tasks will run.
	Task Definition - specify container details, memory, cpu requirement, task placement constraints if any, volumes.
	Tasks - Running instances based on task definition. More than one tasks will require a load balancer.
	Once a code change is made, new image needs to be build, tasks need to be updated manually unless you opted for force update.
	Interestingly, when updates with new versions are deployed, ECS runs them, make them up. 
	Only after successful start, stops old version.

ECS setup options
     -ECS with EC2 - Create EC2 and join them to ECS cluster. 
             In this setup, you have to manage infrastructure yourself. You have to-
                - Manage operating system
                - Docker runtime, ECS Agent
                - check whether enough resources
		- Specify VPC/subnet - existing or new
                Advantage - more control of infrastructure
     -ECS with Fargate  - delegate infrastructure management also to AWS. AWS will do
                - container orchestration
                - Hosting infrastructure management
            You provide containers to fargate. Farget will decide hou much RAM, CPU, other resources will be required.
            So provisioning will be taken care of, on demand. So pay only what you use.
            Compare this with EC2 where you have to pay for having an EC2 irrespective of using or not.
            BUT - you loose control.
-------------------------------
EKS - Elastic K8s service - Alternative to ECS
Why EKS
     Because project was already using k8s and want to move to aws as is
     k8s is open source 
     K8s vendor neutral. ECS is Amazon specific
     K8s has bigger community, plugins - e.g Helmchart
Setup
    It is easier on AWS. 
    Create EKS cluster/service. (Control Pane). 
    Master node:
            It will automatically provision master nodes and its related components.
    	    Master nodes are replicated in different AZs.
    	    Etcds are replicated in the same way.
    Worker node:
        Self managed:
            EC2 instances joins cluster in the same way as ecs.
            So need to manage operating systems on EC2 the same way as ECS.
        Semi managed: EKS with Node Group
            Create the node group of related worker nodes. This makes it easier for new worker node to join.
            EC2 instances are managed by nodegroup.
            But Autoscaling needs to be done manually on AWS
       Fully managed - EKS with Fargate

Steps
================
install awscli - msi for windows kept in C:\dev\installers\aws, installed at C:\Program Files\Amazon\AWSCLIV2\
>aws --version
From AWS console, create access key, secrete key for aws user which will access EKS cluster.
>aws configure (supply access key, secret key when prompted. Also - default region, default output format(json))

install eksctl
>eksctl create cluster
	- n <cluster-name>
	- r <region-name>
		--zones <strings> - At least two zone for high availability
		by default use node group, to change use --fargate option
		-- node type(= instance type, t2, t3 nono micro etc)
		-- nodes (= number of nodes, default 2)
Basic:
>eksctl create cluster --name my-cluster --region us-west-2
----
With customer node group:
>eksctl create cluster --name <cluster-name> \
  --region us-east-1 \
  --version 1.28 \
  --nodegroup-name my-nodegroup \
  --node-type t3.medium \
  --nodes 2 \
  --managed

----
Verify
>eksctl get cluster --name my-cluster
>kubectl get nodes
----
When done, delete the cluster
>eksctl delete cluster -n <cluster-name>

		
            
---------------------
ECR - Elastic container Registry
     keeps container images
     Advantage - integrate well with AWS services. When new version of image arrives, notify the K8s cluster.

Amazon Container Service

ECS
	Can ECS cluster go beyond a region/vpc?
	Cluster, Services, Tasks

EKS

Amazon Elastic Kubernetes Service (EKS) is a fully managed service that makes it easy to run and scale Kubernetes applications on AWS. EKS allows you to deploy, manage, and scale containerized applications using Kubernetes
