install git 2.20.1
>> Right click on folder and click 'Git Bash here'

>>ls
>>git config --global user.name "shishirkumar123"
>>git config --global user.email shishirkumar123@gmail.com
>>git clone https://github.com/shishirkumar123/Firstttt.git

If you are behind company's firewall then what extra do you need to do?
If id/password dont need to be supplied - git config --global http.proxy http://<server>:<port>
If id/password need to be supplied - git config --global http.proxy http://<userId>:<password>@<server>:<port>

To undo -
git config --global --unset https.proxy
git config --global --unset http.proxy

Usually I have created repository in github.com and then cloned it on my machine:
>>git remote add origin https://github.com/shishirkumar123/design.git
>>git branch -M main
>>git push -u origin main
Alternatively I can do below steps -
>>git init
>>git add README.md
>>git commit -m "first commit"
>>git remote add origin https://github.com/shishirkumar123/exp.git
>>git push -u origin master

Can I create repository in my machine and push it to github? Something like below -
-------------
//While using code editor this the following -
1. At Window desired folder, right click open bash and do git clone <git-repo>.
    - entire folder is downloaded.
2. At code editor, in the source control tab - stage, commit, push.
    - This prompts for user id/password for github. Hope that if it was supplied before git config, the prompt might not have come.
--------------

>>cd <foldername>
>>ls
>>create a file in this folder
>>ls
>>git add <filename> --for staging?
>>git status
>>git commit -m "comment" <filename>
>>git push -u origin master [i tried git push. it worked too without -u option]
>>modify file locally
>>git status
>>git commit -m "comment2" <filename>

more just for learning..
>> git init
>>git checkout
    For switching branch. e.g:
        git checkout feature-branch  # Switch to 'feature-branch'
    For restoring. e.g:
        git checkout -- file.txt     # Restore 'file.txt' from the last commit
    For creating a new branch 
        git checkout -b new-branch
>>git push --set-upstream <repository-name> master
>>git remote add origin https://github.com/shishirkumar123/user-auth.git
>>git remote remove origin - no url needed.
>> git fetch
>> git merge
>> git checkout
>> git branch - list of branches
>> git rebase
>> git branch -d branch_name
>> git branch -D branch_name (force)
>> git push <remote_name> --delete <branch_name>
>> git switch -c <new-branch-name>

-----------------------
try branching merging rebasing

Notes
1. I guess it is better to do git pull before git push. If file 1 got modified directly in the repo, file 2 was 
modified locally, when you try git push, you get error. So first pull and then push.
-----------------------

Gitflow
- Create feature branch for all features
- Once feature code done, review and merge to develop branch.
- Create release branch for release.
- develop and feature branch will continue as usual.
- QA and Bug fix will be done in release and moved to develop as well.
- Once QA approved, move release to main. delete release.

-------------------------
 
